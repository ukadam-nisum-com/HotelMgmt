<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:s="http://www.springframework.org/schema/security"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    http://www.springframework.org/schema/jdbc
	http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
    http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.1.xsd"
	   xmlns:jdbc="http://www.springframework.org/schema/jdbc">
    
	<bean id="clientService" class="cz.fi.muni.pa165.hotelbookingmanagerpersistence.service.impl.ClientServiceImpl"></bean>
	<bean id="roomService" class="cz.fi.muni.pa165.hotelbookingmanagerpersistence.service.impl.RoomServiceImpl"></bean>
	<bean id="hotelService" class="cz.fi.muni.pa165.hotelbookingmanagerpersistence.service.impl.HotelServiceImpl"></bean>
	<bean id="reservationService" class="cz.fi.muni.pa165.hotelbookingmanagerpersistence.service.impl.ReservationServiceImpl"></bean>
	<bean id="regUserService" class="cz.fi.muni.pa165.hotelbookingmanagerpersistence.service.impl.RegUserServiceImpl"></bean>
    
	<bean id="clientDAO" class="cz.fi.muni.pa165.hotelbookingmanagerpersistence.dao.impl.ClientDAOImpl"></bean>
	<bean id="roomDAO" class="cz.fi.muni.pa165.hotelbookingmanagerpersistence.dao.impl.RoomDAOImpl"></bean>
	<bean id="hotelDAO" class="cz.fi.muni.pa165.hotelbookingmanagerpersistence.dao.impl.HotelDAOImpl"></bean>
	<bean id="reservationDAO" class="cz.fi.muni.pa165.hotelbookingmanagerpersistence.dao.impl.ReservationDAOImpl"></bean>
	<bean id="regUserDAO" class="cz.fi.muni.pa165.hotelbookingmanagerpersistence.dao.impl.RegUserDAOImpl"></bean>
    
	<!-- Production database -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="username" value="pa165"/>
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
		<property name="password" value="pa165"/>
		<property name="url" value="jdbc:mysql://127.6.10.130:3306/pa165"/>
	</bean>
    
	<context:component-scan base-package="cz.fi.muni.pa165.hotelbookingmanagerweb, cz.fi.muni.pa165.hotelbookingmanagerrest"/>

	<tx:annotation-driven/> 
    
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="HotelBookingManagerPU"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>   
    
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor"/>
        
	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean"/>
    
	<bean id="mapper" class="org.dozer.DozerBeanMapper">
		<property name="mappingFiles">
			<list>
				<value>dozerBeanMapping.xml</value>            
			</list>
		</property>
	</bean>
        
	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>StripesResources</value>
				<value>StripesResources_cs</value>
			</list>
		</property>
	</bean>
        
	<s:http pattern="/styles/**" security="none"/>
	<s:http pattern="/scripts/**" security="none"/>
	<s:http pattern="/images/**" security="none"/>
	
	<s:http pattern="/rest/**" create-session="stateless">
		<s:intercept-url pattern='/**' access='ROLE_ADMIN' />
		<s:http-basic />
	</s:http>

	<s:http auto-config='true' use-expressions="true">	
		<s:intercept-url pattern="/login.jsp*" access="isAnonymous()"/>
		<s:intercept-url pattern="/users/register*" access="isAnonymous()"/>
		<s:intercept-url pattern="/users/add*" access="true"/>
		<s:intercept-url pattern="/users/**" access="true" />
		<s:intercept-url pattern="/clients/**" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/hotels/add*" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/hotels/edit*" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/hotels/save*" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/hotels/delete*" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/rooms/add*" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/rooms/edit*" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/rooms/save*" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/rooms/delete*" access="hasRole('ROLE_ADMIN')" />
		<s:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER, ROLE_ADMIN')" />
		<s:form-login login-page="/login.jsp" default-target-url="/index.jsp"
					  authentication-failure-url="/login.jsp?loginerror=1" />
	</s:http>

	<s:global-method-security pre-post-annotations="enabled"/>
  
	<s:authentication-manager>
		<s:authentication-provider>
			<s:user-service id="userDetailsService">
				<s:user name="admin" password="admin"
						authorities="ROLE_ADMIN" />
				<s:user name="rest" password="rest"
						authorities="ROLE_ADMIN" />
			</s:user-service>
		</s:authentication-provider>
		<s:authentication-provider user-service-ref="regUserService" />
	</s:authentication-manager>
 
	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
	<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/> 

</beans>